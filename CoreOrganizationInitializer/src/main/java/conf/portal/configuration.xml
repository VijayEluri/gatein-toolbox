<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>

   <!-- Main configuration of service -->
	<component>
		<type>org.exoplatform.core.component.organization.initializer.OrganizationListenersInitializerService</type>
		<init-params>
			<value-param>
				<name>repository</name>
				<value>repository</value>
			</value-param>
			<value-param>
				<name>workspace</name>
				<value>portal-system</value>
			</value-param>
			<value-param>
				<name>homePath</name>
				<value>/</value>
			</value-param>
         <value-param>
            <name>executeAllListenersDuringBoot</name>
            <value>true</value>
         </value-param>
		</init-params>
	</component>

   <!-- Possibility to trigger operations through REST -->
   <component>
		<type>org.exoplatform.core.component.organization.initializer.RestOrganizationInitializer</type>
	</component>

   <!-- Possibility to trigger operations through JMX -->
   <component>
      <type>org.exoplatform.core.component.organization.initializer.JMXOrganizationInitializer</type>
   </component>

   <!-- Listeners for creating marker JCR folders -->
	<external-component-plugins>
		<target-component>org.exoplatform.services.organization.OrganizationService</target-component>
		<component-plugin>
			<name>organization.initializer.group.event.listener</name>
			<set-method>addListenerPlugin</set-method>
			<type>org.exoplatform.core.component.organization.initializer.NewGroupListener</type>
			<description>description</description>
		</component-plugin>
		<component-plugin>
			<name>organization.initializer.user.event.listener</name>
			<set-method>addListenerPlugin</set-method>
			<type>org.exoplatform.core.component.organization.initializer.NewUserListener</type>
			<description>description</description>
		</component-plugin>
		<component-plugin>
			<name>organization.initializer.membership.event.listener</name>
			<set-method>addListenerPlugin</set-method>
			<type>org.exoplatform.core.component.organization.initializer.NewMembershipListener</type>
			<description>description</description>
		</component-plugin>
		<component-plugin>
			<name>organization.initializer.profile.event.listener</name>
			<set-method>addListenerPlugin</set-method>
			<type>org.exoplatform.core.component.organization.initializer.NewProfileListener</type>
			<description>description</description>
		</component-plugin>
	</external-component-plugins>

   <!-- Trigger listeners for particular user after his login -->
   <external-component-plugins>
      <target-component>org.exoplatform.web.filter.ExtensibleFilter</target-component>
      <component-plugin>
         <name>TriggerInitializerFilter</name>
         <set-method>addFilterDefinitions</set-method>
         <type>org.exoplatform.web.filter.FilterDefinitionPlugin</type>
         <init-params>
            <object-param>
               <name>Trigger Initializer filter definition</name>
               <object type="org.exoplatform.web.filter.FilterDefinition">
                  <field name="filter">
                     <object type="org.exoplatform.core.component.organization.initializer.TriggerInitializerFilter">
                        <field name="checkFolders"><boolean>true</boolean></field>
                        <field name="triggerListenersForGroups"><boolean>true</boolean></field>
                     </object>
                  </field>
                  <field name="patterns">
                     <collection type="java.util.ArrayList" item-type="java.lang.String">
                        <value>
                           <string>/.*</string>
                        </value>
                     </collection>
                  </field>
               </object>
            </object-param>
         </init-params>
      </component-plugin>
   </external-component-plugins>

   <!-- Trigger all listeners periodically -->
	<external-component-plugins>
		<target-component>org.exoplatform.services.scheduler.JobSchedulerService</target-component>
		<component-plugin>
			<name>OrgInitializerCronJob</name>
			<set-method>addCronJob</set-method>
			<type>org.exoplatform.services.scheduler.CronJob</type>
			<description>Initialize added Organization Model objects added by an UIother tha eXo UI</description>
			<init-params>
				<properties-param>
					<name>cronjob.info</name>
					<description>Invoke initializer periodically</description>
					<property name="jobName" value="OrgInitializerCronJob"/>
					<property name="groupName" value="group"/>
					<property name="job" value="org.exoplatform.core.component.organization.initializer.OrganizationInitializerJob"/>
					<property name="expression" value="0 45 23 * * ? *"/>
				</properties-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>
</configuration>